services:
  # Postgres DB for data - could also be hosted externally
  postgres:
    image: postgres:15-alpine
    container_name: storii-postgres
    environment:
      POSTGRES_DB: ${DBNAME:-storii}
      POSTGRES_USER: ${DBUSER:-storii_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-storii_secure_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - storii-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U storii_user -d storii"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  storii-api:
    image: ghcr.io/b2dennis/storii-api:latest
    container_name: storii-api
    environment:
      JWTSECRET: ${JWT_SECRET:-change-this-jwt-secret-in-production-make-it-very-long-and-secure}
      JWTEXPIRY: ${JWT_EXPIRY:-24}
      LOGOUTPUT: ${LOGOUTPUT:-stdout}
      ADDRESS: ${ADDRESS:-:9999}

      # Database Configuration
      DBHOST: ${DBHOST:-postgres}
      DBNAME: ${DBNAME:-storii}
      DBPORT: ${DBPORT:-5432}
      DBUSER: ${DBUSER:-storii_user}
      DBPASS: ${DB_PASSWORD:-storii_secure_password}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - storii-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "http://localhost${ADDRESS:-:9999}/util/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  storii-network:
    driver: bridge
